# @author: robinson (omlins and hvictor for IJulia)
easyblock = 'PythonBundle'

name = 'jupyterlab'
version = '2.2.10'
versionsuffix = '-batchspawner-cuda'

homepage = 'https://github.com/jupyterlab/jupyterlab'
description = "An extensible environment for interactive and reproducible computing, based on the Jupyter Notebook and Architecture."

toolchain = {'name': 'CrayGNU', 'version': '21.09'}
toolchainopts = {'pic': True, 'verbose': False}

builddependencies = [
    ('wheel', '0.37.0')
]

dependencies = [
    ('configurable-http-proxy', '4.5.0'),
    ('cray-python', EXTERNAL_MODULE),
    ('cudatoolkit', EXTERNAL_MODULE),
    ('graphviz', '2.50.0'),
    ('JuliaExtensions', '1.6.3', '-cuda'),
    ('libffi', '3.4.2')
]

modtclfooter = """
prepend-path EBJULIA_ADMIN_DEPOT_PATH "%(installdir)s/share/IJulia"
prepend-path JULIA_LOAD_PATH "%(installdir)s/share/IJulia/environments/$::env(EBJULIA_ENV_NAME)"
"""

# install extensions and batchspawner components
postinstallcmds = [
"""
export YARN_CACHE_FOLDER=/tmp/$USER//12345/yarn_cache && 
export NODE_OPTIONS=--max-old-space-size=4096 &&
export JULIA_DEPOT_PATH=%(installdir)s/share/julia/site/ && 
export JUPYTER=%(installdir)s/bin/jupyter &&   # Needed for IJulia 
export JUPYTER_DATA_DIR=%(installdir)s/share/jupyter/ && 
export JUPYTERLAB_DIR=%(installdir)s/share/jupyter/lab/ && 
export PYTHONPATH=%(installdir)s/lib/python%(pyshortver)s/site-packages:$PYTHONPATH &&
%(installdir)s/bin/jupyter-labextension install -y @jupyter-widgets/jupyterlab-manager@2.0.0 jupyter-matplotlib@0.10.4 --no-build && 
%(installdir)s/bin/jupyter labextension install dask-labextension@4.0.1 --no-build && 
%(installdir)s/bin/jupyter-labextension install jupyterlab-datawidgets@6.3.0 --no-build && 
%(installdir)s/bin/jupyter-labextension install itkwidgets@0.32.1 --no-build && 
%(installdir)s/bin/jupyter labextension install -y plotlywidget@4.14.3 --no-build &&
%(installdir)s/bin/jupyter labextension install -y jupyterlab-plotly@5.5.0 --no-build &&
%(installdir)s/bin/jupyter labextension install -y @bokeh/jupyter_bokeh@2.0.4 --no-build && 
%(installdir)s/bin/jupyter labextension install -y @ryantam626/jupyterlab_code_formatter@1.3.8 --debug --no-build &&  
%(installdir)s/bin/jupyter labextension install jupyterlab-topbar-extension@0.5.0 jupyterlab-system-monitor@0.6.0 --no-build && 
%(installdir)s/bin/jupyter labextension install nglview-js-widgets@3.0.1 --no-build &&
%(installdir)s/bin/jupyter labextension install jupyterlab-nvdashboard@0.5.1 --no-build &&  
cd %(installdir)s/ && 
git clone https://github.com/NVIDIA/ipyparaview && 
cd ipyparaview && 
git checkout 074d548 && 
%(installdir)s/bin/jupyter labextension install js --no-build && 

# JupyterLab build
%(installdir)s/bin/jupyter lab build --debug --dev-build=False --minimize=False &&
rm -r $YARN_CACHE_FOLDER && 
# Bash kernel - https://github.com/takluyver/bash_kernel
python3 -m bash_kernel.install --prefix=%(installdir)s/ && 
# IJulia kernel - https://github.com/JuliaLang/IJulia.jl
# installs ijulia in JULIA_DEPOT_PATH and kernel in $JUPYTER_DATA_DIR/kernels
unset EBJULIA_USER_DEPOT_PATH && 
export EBJULIA_ADMIN_DEPOT_PATH=%(installdir)s/share/IJulia && 
export JULIA_DEPOT_PATH=%(installdir)s/share/IJulia && 
export JULIA_PROJECT=%(installdir)s/share/IJulia/environments/$EBJULIA_ENV_NAME && 
julia -e 'using Pkg; Pkg.add("IJulia");' && 
chmod -R +rX %(installdir)s/share/IJulia && # Adjust permissions of IJulia files
file=%(installdir)s/share/jupyter/kernels/julia-1.6/kernel.json && cp $file ${file}.orig && cat $file.orig | perl -pe 's/"--project=.*",//g' > $file # Remove IJulia specific project configuration
"""
]

exts_default_options = {
    'req_py_majver': '%(pymajver)s',
    'req_py_minver': '%(pyminver)s',
    'source_urls': ['https://pypi.python.org/packages/source/%(nameletter)s/%(name)s'],
    'use_pip': True,
}

exts_list = [
    #IPython
    ('cloudpickle', '2.0.0'),
    ('flit-core', '3.5.1', {
        'modulename': 'flit_core',
        'sources': ['flit_core-%(version)s-py%(pymajver)s-none-any.whl'],
    }),
    ('tomli', '2.0.0', {'sources': ['%(name)s-%(version)s-py%(pymajver)s-none-any.whl']}),
    ('backcall', '0.2.0'),
    ('decorator', '5.1.0'),
    ('iniconfig', '1.1.1'),
    ('ipython_genutils', '0.2.0'),
    ('ipython', '7.30.1', {'modulename': 'IPython'}),
    ('jedi', '0.18.1'),
    ('matplotlib-inline', '0.1.3'),
    ('parso', '0.8.3'),
    ('pexpect', '4.8.0'),
    ('pickleshare', '0.7.5'),
    ('prompt_toolkit', '3.0.24'),
    ('ptyprocess', '0.7.0'),
    ('Pygments', '2.11.0'),
    ('pytest', '6.2.5', {'sources': ['%(name)s-%(version)s-py%(pymajver)s-none-any.whl']}),
    ('PyYAML', '6.0', {'modulename': 'yaml'}),
    ('toml', '0.10.2'),
    ('traitlets', '5.1.1'),

    # jupyterlab 
    ('MarkupSafe', '2.0.1'),
    ('Send2Trash', '1.8.0'),
    ('cffi', '1.15.0'),
    ('argon2-cffi', '21.3.0', {'modulename': 'argon2'}),
    ('argon2-cffi-bindings', '21.2.0', {'modulename': 'argon2'}),
    ('bleach', '3.1.0'),
    ('certifi', '2021.10.8'),
    ('charset-normalizer', '2.0.9'),
    ('debugpy', '1.5.1', {'source_tmpl': 'debugpy-%(version)s.zip'}),
    ('defusedxml', '0.7.1'),
    ('flit', '3.5.1'),
    ('requests', '2.26.0'),
    ('urllib3', '1.26.7'),
    ('idna', '3.3'),
    ('docutils', '0.18.1'),
    ('entrypoints', '0.3'),
    ('webencodings', '0.5.1'),
    ('jupyter_core', '4.9.1'),
    ('jupyter_client', '7.1.0'),
    ('pyzmq', '22.3.0', {'modulename': 'zmq'}),
    ('tornado', '6.1'),
    ('ipykernel', '6.6.0'), 
    ('ipython_genutils', '0.2.0'),
    ('Jinja2', '3.0.3'),
    ('jsonschema', '4.3.3'),
    ('json5', '0.9.6'),
    ('jupyterlab_pygments', '0.1.2'),
    ('jupyterlab_server', '1.2.0'),
    ('mistune', '0.8.4'),
    ('nbclient', '0.5.9'),
    ('nbconvert', '6.3.0'),
    ('nbformat', '5.1.3'),
    ('nest_asyncio', '1.5.4'),
    ('notebook', '6.4.6'),
    ('pandocfilters', '1.5.0'),
    ('prometheus_client', '0.12.0'),
    ('pycparser', '2.21'),
    ('pyrsistent', '0.18.0'),
    ('testpath', '0.5.0'),
    ('terminado', '0.12.1'),
    ('jupyterlab', '2.2.10'),

    # jupyterhub 
    ('SQLAlchemy', '1.4.29'),
    ('greenlet', '1.1.2'),
    ('python-json-logger', '2.0.2', {'modulename': 'pythonjsonlogger'}), 
    ('ruamel.yaml', '0.17.20', {'modulename': 'ruamel'}),
    ('ruamel.yaml.clib', '0.2.6', {'modulename': 'ruamel'}),
    ('jupyter_telemetry', '0.1.0'), 
    ('Mako', '1.1.6'),
    ('alembic', '1.7.5'),
    ('async_generator', '1.10'),
    ('cryptography', '36.0.1', {'unpack_sources': False, 'source_tmpl': 'cryptography-36.0.1-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl'}),
    ('pyOpenSSL', '21.0.0', {'modulename': 'OpenSSL'}),
    ('certipy', '0.1.3'),
    ('oauthlib', '3.1.1'),
    ('pamela', '1.0.0'),
    ('jupyterhub', '2.0.1'),

    # matplotlib and widgets  
    ('Pillow', '9.0.0', {'modulename': 'PIL'}),
    ('kiwisolver', '1.3.2'),
    ('matplotlib', '3.5.1'),
    ('fonttools', '4.28.5',{'source_tmpl': 'fonttools-%(version)s.zip', 'modulename': 'fontTools'}),
    ('cycler', '0.11.0'),
    ('jupyter_packaging', '0.11.1'),
    ('ipympl', '0.8.4', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py2.py3-none-any.whl', 'unpack_sources': False}),
    ('widgetsnbextension', '3.5.2'),
    ('ipywidgets', '7.6.5', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py2.py3-none-any.whl', 'unpack_sources': False}),
    ('jupyterlab_widgets', '1.0.2', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl', 'unpack_sources': False}),

    # dask and dask labextension 
    ('click', '8.0.3'),
    ('cloudpickle', '2.0.0'),
    ('dask', '2021.12.0'),
    ('distributed', '2021.12.0'),
    ('HeapDict', '1.0.1'),
    ('msgpack', '1.0.3'),
    ('psutil', '5.9.0'),
    ('PyYAML', '6.0', {'modulename': 'yaml'}),
    ('sortedcontainers', '2.4.0'),
    ('tblib', '1.7.0'),
    ('zict', '2.0.0'),
    ('dask-jobqueue', '0.7.3'),
    ('aiohttp', '3.8.1'),
    ('aiosignal', '1.2.0'),
    ('anyio', '3.4.0'),
    ('async-timeout', '4.0.2'),
    ('bokeh', '2.4.2'),
    ('dask_labextension', '4.0.0'), 
    ('frozenlist', '1.2.0'),
    ('jupyter_server', '1.13.1', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl', 'unpack_sources': False}),
    ('jupyter_server_proxy', '3.2.0', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl', 'unpack_sources': False}), 
    ('multidict', '5.2.0'),
    ('simpervisor', '0.4'),
    ('sniffio', '1.2.0'),
    ('typing_extensions', '4.0.1'),
    ('websocket-client', '1.2.3', {'modulename': 'websocket'}),
    ('yarl', '1.7.2'),

    # nbresuse for jupyterlab-system-monitor extension
    ('nbresuse', '0.3.6'), 

    # plotly 
    ('tenacity', '8.0.1'),
    ('plotly', '5.5.0'), 

    # itkwidgets
    ('traittypes', '0.2.1'),
    ('param', '1.12.0'),
    ('pyct', '0.4.8'),
    ('colorcet', '3.0.0'),
    ('zstandard', '0.16.0'),
    ('itk-core', '5.2.1.post1', {'unpack_sources': False, 'modulename': 'itk', 'source_tmpl': 'itk_core-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-manylinux_2_17_x86_64.manylinux2014_x86_64.whl'}),
    ('itk-numerics', '5.2.1.post1', {'unpack_sources': False, 'modulename': 'itk', 'source_tmpl': 'itk_numerics-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-manylinux_2_17_x86_64.manylinux2014_x86_64.whl'}),
    ('itk-filtering', '5.2.1.post1', {'unpack_sources': False, 'modulename': 'itk', 'source_tmpl': 'itk_filtering-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-manylinux_2_17_x86_64.manylinux2014_x86_64.whl'}),
    ('itk-meshtopolydata', '0.7.1', {'unpack_sources': False, 'modulename': 'itk', 'source_tmpl': 'itk_meshtopolydata-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-manylinux2014_x86_64.whl'}),
    ('ipydatawidgets', '4.2.0', {'unpack_sources': False, 'modulename': 'ipydatawidgets', 'source_tmpl': 'ipydatawidgets-4.2.0-py2.py3-none-any.whl'}),
    ('itkwidgets', '0.32.1', {'unpack_sources': False, 'modulename': 'ipydatawidgets', 'source_tmpl': 'itkwidgets-0.32.1-py2.py3-none-any.whl'}), 

    # JupyterLab GPU Dashboard (nvdashboard)
    ('pynvml', '11.4.1'),
    ('jupyterlab-nvdashboard', '0.4.0'),

    # ipyparaview 
    ('ipyparaview', '074d548', {'source_urls': ['https://github.com/NVIDIA/ipyparaview/tarball/%(version)s']}),

    # jupyterlab code formatter
    ('pathspec', '0.9.0'),
    ('mypy_extensions', '0.4.3'),
    ('platformdirs', '2.4.1'),
    ('tomli', '1.2.3'),
    ('isort', '5.10.1', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl', 'unpack_sources': False}),
    ('black', '21.12b0'),
    ('jupyterlab_code_formatter', '1.3.8'), 

    # ipcluster magics
    ('ipyparallel', '8.0.0', {'source_tmpl': 'ipyparallel-%(version)s-py3-none-any.whl'}),
    ('docopt', '0.6.2'),
    ('tqdm', '4.62.3'),
    ('ipcmagic', 'v1.0.2', {'modulename': False, 'source_urls': ['https://github.com/eth-cscs/ipcluster_magic/tarball/%(version)s']}),
    ('nglview', '2.7.7'),
    ('bash_kernel', '0.7.2', {'use_pip': False}),

    # custom batchspawner
    ('batchspawner', '68a1fcd', {'source_urls': ['https://github.com/jupyterhub/batchspawner/tarball/%(version)s']})
]

sanity_check_paths = {
    'files': [],
    'dirs': ['lib/python%(pyshortver)s/site-packages', 'share/jupyter/lab/extensions', 'share/jupyter/lab/schemas', 'share/jupyter/lab/staging', 'share/jupyter/lab/static', 'share/jupyter/lab/themes']
}

modextrapaths = {
    'JUPYTER_PATH': 'share/jupyter'
}

modextravars = {
    'JUPYTER': '%(installdir)s/bin/jupyter',
    'JUPYTERLAB_DIR': '%(installdir)s/share/jupyter/lab/'
}

moduleclass = 'tools'
