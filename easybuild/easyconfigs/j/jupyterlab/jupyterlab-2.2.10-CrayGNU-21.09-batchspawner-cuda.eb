# @author: robinson (omlins and hvictor for IJulia)

easyblock = 'PythonBundle'

name = 'jupyterlab'
version = '2.2.10'
versionsuffix = '-batchspawner-cuda'

homepage = 'https://github.com/jupyterlab/jupyterlab'
description = "An extensible environment for interactive and reproducible computing, based on the Jupyter Notebook and Architecture."

toolchain = {'name': 'CrayGNU', 'version': '21.09'}
toolchainopts = {'pic': True, 'verbose': False}

builddependencies = [
    ('wheel', '0.37.0'),
]

dependencies = [
    ('cray-python', EXTERNAL_MODULE),
    ('cudatoolkit', EXTERNAL_MODULE),
    ('libffi', '3.2.1', '', True),
###    ('IPython', '7.30.1', ''),
    ('configurable-http-proxy', '4.5.0'),
    ('JuliaExtensions', '1.6.1', '-cuda'),
###    ('dask', '2.2.0', '-python%(pymajver)s'),
    ('graphviz', '2.50.0'),
]

modtclfooter = """
###prepend-path JULIA_DEPOT_PATH "%(installdir)s/share/IJulia"
prepend-path EBJULIA_ADMIN_DEPOT_PATH "%(installdir)s/share/IJulia"
prepend-path JULIA_LOAD_PATH "%(installdir)s/share/IJulia/environments/$::env(EBJULIA_ENV_NAME)"
###prepend-path EBJULIA_ADMIN_LOAD_PATH "%(installdir)s/share/IJulia/environments/$::env(EBJULIA_ENV_NAME)"
"""
# install extensions and batchspawner components

postinstallcmds = [
"""
export YARN_CACHE_FOLDER=/tmp/$USER/yarn_cache && 
export NODE_OPTIONS=--max-old-space-size=4096 &&
export JUPYTERLAB_DIR=%(installdir)s/share/jupyter/lab/ && 
export PYTHONPATH=%(installdir)s/lib/python%(pyshortver)s/site-packages:$PYTHONPATH && 
#export JUPYTER_PATH=%(installdir)s/share/jupyter/ && 
export JUPYTER_DATA_DIR=%(installdir)s/share/jupyter/ && 
export JULIA_DEPOT_PATH=%(installdir)s/share/julia/site/ && 
export JUPYTER=%(installdir)s/bin/jupyter &&   # Needed for IJulia (and maybe others)
###%(installdir)s/bin/jupyter-labextension install -y @jupyter-widgets/jupyterlab-manager@2.0.0 jupyter-matplotlib@0.10.4 --debug --no-build && 
###%(installdir)s/bin/jupyter labextension install dask-labextension --debug  --no-build && 

###%(installdir)s/bin/jupyter-labextension install jupyterlab-datawidgets@6.3.0 --no-build && 
###%(installdir)s/bin/jupyter-labextension install itkwidgets --debug --no-build && 
###%(installdir)s/bin/jupyter labextension install jupyter-matplotlib --debug --no-build && 
###%(installdir)s/bin/jupyter labextension install -y plotlywidget --debug --no-build &&
###%(installdir)s/bin/jupyter labextension install -y jupyterlab-plotly --debug --no-build &&
###%(installdir)s/bin/jupyter labextension install -y @bokeh/jupyter_bokeh --debug --no-build && 
###%(installdir)s/bin/jupyter labextension install -y bqplot@0.5.14 --debug --no-build && 
###%(installdir)s/bin/jupyter labextension install -y @ryantam626/jupyterlab_code_formatter@1.3.5 --debug --no-build &&  #hard coded 1.3.5 to match pip python module above
###%(installdir)s/bin/jupyter labextension install jupyterlab-topbar-extension jupyterlab-system-monitor   --debug --no-build && #bumped from 0.4.0 to 0.5.0 and 0.4.1 to 0.6.0
###%(installdir)s/bin/jupyter labextension install nglview-js-widgets --debug  --no-build &&
###%(installdir)s/bin/jupyter labextension install jupyterlab-nvdashboard --debug --no-build --debug &&  
###cd %(installdir)s/ && 
###git clone https://github.com/NVIDIA/ipyparaview && 
###cd ipyparaview && 
###git checkout 074d548 && 
###%(installdir)s/bin/jupyter labextension install js --no-build && 
#now finally do the JupyterLab build
%(installdir)s/bin/jupyter lab build --debug --dev-build=False 
###rm -r $YARN_CACHE_FOLDER && 
# Bash kernel - https://github.com/takluyver/bash_kernel
###python3 -m bash_kernel.install --prefix=%(installdir)s/ && 
# IJulia kernel - https://github.com/JuliaLang/IJulia.jl
# installs ijulia in JULIA_DEPOT_PATH and kernel in $JUPYTER_DATA_DIR/kernels
###unset EBJULIA_USER_DEPOT_PATH && 
###export EBJULIA_ADMIN_DEPOT_PATH=%(installdir)s/share/IJulia && 
###export JULIA_DEPOT_PATH=%(installdir)s/share/IJulia && 
###export JULIA_PROJECT=%(installdir)s/share/IJulia/environments/$EBJULIA_ENV_NAME && 
###julia -e 'using Pkg; Pkg.add("IJulia");' && 
###chmod -R +rX %(installdir)s/share/IJulia &&  # Adjust permissions of IJulia files
###file=%(installdir)s/share/jupyter/kernels/julia-1.6/kernel.json && cp $file ${file}.orig && cat $file.orig | perl -pe 's/"--project=.*",//g' > $file # Remove IJulia specific project configuration
""",
]

exts_default_options = {
    'req_py_majver': '%(pymajver)s',
    'req_py_minver': '%(pyminver)s',
    'source_urls': ['https://pypi.python.org/packages/source/%(nameletter)s/%(name)s'],
#    'sources': ['%(name)s-%(version)s.tar.gz'],
    'use_pip': True,
}

exts_list = [
    #IPython and its deps
    ('cloudpickle', '2.0.0'),
    ('flit-core', '3.5.1', {
        'modulename': 'flit_core',
        'sources': ['flit_core-%(version)s-py%(pymajver)s-none-any.whl'],
    }),
    ('tomli', '2.0.0', {'sources': ['%(name)s-%(version)s-py%(pymajver)s-none-any.whl']}),
    ('backcall', '0.2.0'),
    ('decorator', '5.1.0'),
    ('iniconfig', '1.1.1'),
    ('ipython_genutils', '0.2.0'),
    ('ipython', '7.30.1', {'modulename': 'IPython'}),
    ('jedi', '0.18.1'),
    ('matplotlib-inline', '0.1.3'),
    ('parso', '0.8.3'),
    ('pexpect', '4.8.0'),
    ('pickleshare', '0.7.5'),
    ('prompt_toolkit', '3.0.24'),
    ('ptyprocess', '0.7.0'),
    ('Pygments', '2.11.0'),
    ('pytest', '6.2.5', {'sources': ['%(name)s-%(version)s-py%(pymajver)s-none-any.whl']}),
    ('PyYAML', '6.0', {'modulename': 'yaml'}),
    ('toml', '0.10.2'),
    ('traitlets', '5.1.1'),


    # jupyterlab packages besides ipython and its deps
###    ('jupyterlab', '2.2.10', {'installopts': ' --install-option=--skip-npm '}),
    ('MarkupSafe', '2.0.1'),
    ('Send2Trash', '1.8.0'),
    ('cffi', '1.15.0'),
    ('argon2-cffi', '21.3.0', {'modulename': 'argon2'}),
    ('argon2-cffi-bindings', '21.2.0', {'modulename': 'argon2'}),
    ('bleach', '3.1.0'),
    ('certifi', '2021.10.8'),
    ('charset-normalizer', '2.0.9'),
    ('debugpy', '1.5.1', {'source_tmpl': 'debugpy-%(version)s.zip'}),
    ('defusedxml', '0.7.1'),
    ('flit', '3.5.1'),
    ('requests', '2.26.0'),
    ('urllib3', '1.26.7'),
    ('idna', '3.3'),
    ('docutils', '0.18.1'),
    ('entrypoints', '0.3'),
    ('webencodings', '0.5.1'),
    ('jupyter_core', '4.9.1'),
    ('jupyter_client', '7.1.0'),
    ('pyzmq', '22.3.0', {'modulename': 'zmq'}),
    ('tornado', '6.1'),
    ('ipykernel', '6.6.0'), 
    ('ipython_genutils', '0.2.0'),
    ('Jinja2', '3.0.3'),
    ('jsonschema', '4.3.3'),
    ('json5', '0.9.6'),
    ('jupyterlab_pygments', '0.1.2'),
    ('jupyterlab_server', '1.2.0'),
    ('mistune', '0.8.4'),
    ('nbclient', '0.5.9'),
    ('nbconvert', '6.3.0'),
    ('nbformat', '5.1.3'),
    ('nest_asyncio', '1.5.4'),
    ('notebook', '6.4.6'),
    ('pandocfilters', '1.5.0'),
    ('prometheus_client', '0.12.0'),
    ('pycparser', '2.21'),
    ('pyrsistent', '0.18.0'),
    ('testpath', '0.5.0'),
    ('terminado', '0.12.1'),
    ('jupyterlab', '2.2.10'),

    # jupyterhub and its deps
##    ('SQLAlchemy', '1.4.29'),
##    ('greenlet', '1.1.2'),
##    ('python-json-logger', '2.0.2', {'modulename': 'pythonjsonlogger'}), 
##    ('ruamel.yaml', '0.17.20', {'modulename': 'ruamel'}),
##    ('ruamel.yaml.clib', '0.2.6', {'modulename': 'ruamel'}),
##    ('jupyter_telemetry', '0.1.0'), 
##    ('Mako', '1.1.6'),
##    ('alembic', '1.7.5'),
##    ('async_generator', '1.10'),
##    ('cryptography', '36.0.1', {'unpack_sources': False, 'source_tmpl': 'cryptography-36.0.1-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl'}),
##    ('pyOpenSSL', '21.0.0', {'modulename': 'OpenSSL'}),
##    ('certipy', '0.1.3'),
##    ('oauthlib', '3.1.1'),
##    ('pamela', '1.0.0'),
##    ('jupyterhub', '2.0.1'),

# matplotlib and widgets, needs labextension  
    
##    ('Pillow', '9.0.0', {'modulename': 'PIL'}),
##    ('kiwisolver', '1.3.2'),
##    ('matplotlib', '3.5.1'),
##    ('fonttools', '4.28.5',{'source_tmpl': 'fonttools-%(version)s.zip', 'modulename': 'fontTools'}),
##    ('cycler', '0.11.0'),
##    ('jupyter_packaging', '0.11.1'),
##    ('ipympl', '0.8.4', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py2.py3-none-any.whl', 'unpack_sources': False}),
##    ('widgetsnbextension', '3.5.2'),
##    ('ipywidgets', '7.6.5', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py2.py3-none-any.whl', 'unpack_sources': False}),
##    ('jupyterlab_widgets', '1.0.2', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl', 'unpack_sources': False}),

#dask and dask labextension 



##    ('click', '8.0.3'),
##    ('cloudpickle', '2.0.0'),
##    ('dask', '2021.12.0'),
##    ('distributed', '2021.12.0'),
##    ('HeapDict', '1.0.1'),
##    ('msgpack', '1.0.3'),
##    ('psutil', '5.9.0'),
##    ('PyYAML', '6.0', {'modulename': 'yaml'}),
##    ('sortedcontainers', '2.4.0'),
##    ('tblib', '1.7.0'),
##    ('zict', '2.0.0'),
##    ('dask-jobqueue', '0.7.3'),
##    ('aiohttp', '3.8.1'),
##    ('aiosignal', '1.2.0'),
##    ('anyio', '3.4.0'),
##    ('async-timeout', '4.0.2'),
##    ('bokeh', '2.4.2'),
##    ('dask_labextension', '4.0.0'), 
##    ('frozenlist', '1.2.0'),
##    ('jupyter_server', '1.13.1', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl', 'unpack_sources': False}),
##    ('jupyter_server_proxy', '3.2.0', {'use_pip': True, 'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl', 'unpack_sources': False}), 
##    ('multidict', '5.2.0'),
##    ('simpervisor', '0.4'),
##    ('sniffio', '1.2.0'),
##    ('typing_extensions', '4.0.1'),
##    ('websocket-client', '1.2.3', {'modulename': 'websocket'}),
##    ('yarl', '1.7.2'),

#    ('fsspec', '0.8.4'),
#    ('locket', '0.2.0'),
#    ('partd', '1.1.0'),
#    ('dask-jobqueue', '0.7.1'),
#    ('graphviz', '0.14.2', {'source_tmpl': 'graphviz-%(version)s.zip'}),
    # dask-labextension
#    ('simpervisor', '0.3'),
#    ('multidict', '4.7.6'),
#    ('yarl', '1.5.1'),
#    ('async-timeout', '3.0.1'),
#    ('aiohttp', '3.6.3'),
#    ('jupyter-server-proxy', '1.5.0'),
#    ('dask_labextension', '3.0.0'),



    # itkwidgets
###    ('traittypes', '0.2.1'),
###    ('param', '1.9.2'),
###    ('pyct', '0.4.6'),
###    ('colorcet', '2.0.2'),
###    ('zstandard', '0.13.0'),
###    ('itk-core', '5.1.0', {'unpack_sources': False, 'modulename': 'itk', 'source_tmpl': 'itk_core-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-manylinux1_x86_64.whl'}),
###    ('itk-numerics', '5.1.0', {'unpack_sources': False, 'modulename': 'itk', 'source_tmpl': 'itk_numerics-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-manylinux1_x86_64.whl'}),
###    ('itk-filtering', '5.1.0', {'unpack_sources': False, 'modulename': 'itk', 'source_tmpl': 'itk_filtering-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-manylinux1_x86_64.whl'}),
###    ('itk-meshtopolydata', '0.6.2', {'unpack_sources': False, 'modulename': 'itk', 'source_tmpl': 'itk_meshtopolydata-%(version)s-cp%(pymajver)s%(pyminver)s-cp%(pymajver)s%(pyminver)s-manylinux1_x86_64.whl'}),
###    ('ipydatawidgets', '4.0.1'),
###    ('itkwidgets', '0.31.4'),  # bumped from 0.25.0
    # plotly, requires the lab extension below
###    ('retrying', '1.3.3'),
###    ('plotly', '4.9.0'),  # bumped from 4.0.0 to 4.9.0
###    ('PyYAML', '5.1.2', {'modulename': 'yaml'}),
###    ('bokeh', '1.4.0'),  # bumped from 1.3.4 to 1.4.0 for jlab 2.0
###    ('packaging', '19.1'),
###    ('Pillow', '7.0.0', {'modulename': 'PIL'}),
    # bqplot: requires the labextension below
###    ('bqplot', '0.12.14'),  # bump from 0.11.6 to 0.12.14
    # nbresuse for jupyterlab-system-monitor extension
###    ('psutil', '5.6.3'),
###    ('nbresuse', '0.3.6'),  # bumped from 0.3.2 to 0.3.6
###    ('graphviz', '0.12', {'source_tmpl': 'graphviz-%(version)s.zip'}),
    # dask-labextension
    # This package provides a JupyterLab extension to manage Dask clusters,
    # as well as embed Dask's dashboard plots directly into JupyterLab panes
###    ('simpervisor', '0.3'),
###    ('multidict', '4.6.0'),  # bumped from 4.5.2 to 4.6.0 for python 3.8
###    ('yarl', '1.4.0'),  # bumped from 1.3.0 to 1.4.0 for python 3.8
###    ('typing_extensions', '3.7.4'),
###    ('async-timeout', '3.0.1'),
###    ('idna-ssl', '1.1.0', {'modulename': 'idna_ssl'}),
###    ('aiohttp', '3.6.0'),  # bumped from 3.5.4 to 3.6.0 for python 3.8
###    ('jupyter-server-proxy', '1.5.0'),  # bumped from 1.1.0 to 1.5.0
###    ('dask_labextension', '2.0.0'),  # bumped from 1.0.3 to 2.0.0
    # JupyterLab GPU Dashboard (nvdashboard)
    # JupyterLab extension for displaying dashboards of GPU usage.
    # bump dashboard from 0.2.1 to 0.3.1
###    ('pynvml', '8.0.4'),
###    ('jupyterlab-nvdashboard', '0.3.1'),  # bump dashboard from 0.2.1 to 0.3.1
    ('batchspawner', '68a1fcd', {'source_urls': ['https://github.com/jupyterhub/batchspawner/tarball/%(version)s']}),
###    ('ipyparaview', '074d548', {'source_urls': ['https://github.com/NVIDIA/ipyparaview/tarball/%(version)s']}),
    # jupyterlab code formatter, requires a formatter e.g., black and isort
###    ('pathspec', '0.8.0'),
###    ('typed_ast', '1.4.1'),
###    ('appdirs', '1.4.4'),
###    ('regex', '2020.6.8'),
###    ('toml', '0.10.1'),
###    ('isort', '5.2.2', {'use_pip': False}),
###    ('black', '19.10b0'),
###    ('jupyterlab_code_formatter', '1.3.5'),  # bumped from 1.1.0 to 1.3.5
    # ipcluster magics
###    ('docopt', '0.6.2'),
###    ('ipyparallel', '6.3.0'),
###    ('ipcmagic', '4bd1bb3', {'modulename': False, 'source_urls': ['https://github.com/eth-cscs/ipcluster_magic/tarball/%(version)s']}),
###    ('nglview', '2.7.7'),
    ('bash_kernel', '0.7.2', {'use_pip': False}),
]

sanity_check_paths = {
    'files': [],
###    'dirs': ['lib/python%(pyshortver)s/site-packages', 'share/jupyter/lab/extensions', 'share/jupyter/lab/schemas', 'share/jupyter/lab/staging', 'share/jupyter/lab/static', 'share/jupyter/lab/themes'],
    'dirs': ['lib/python%(pyshortver)s/site-packages'],
}

modextrapaths = {
    'JUPYTER_PATH': 'share/jupyter',
    'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages'],
}

modextravars = {
    'JUPYTER': '%(installdir)s/bin/jupyter',
    'JUPYTERLAB_DIR': '%(installdir)s/share/jupyter/lab/',
}

moduleclass = 'tools'
