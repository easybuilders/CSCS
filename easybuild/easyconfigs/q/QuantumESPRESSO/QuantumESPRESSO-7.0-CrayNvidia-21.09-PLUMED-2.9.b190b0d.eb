# created by Luca Marsella (CSCS)
easyblock = 'ConfigureMake'

name = 'QuantumESPRESSO'
version = '7.0'
local_plumedversion = '2.9.b190b0d'
versionsuffix = '-PLUMED-%s' % local_plumedversion

homepage = 'http://www.quantum-espresso.org/'
description = """Quantum ESPRESSO is an integrated suite of computer codes for
electronic-structure calculations and materials modeling at the nanoscale. It
is based on density-functional theory, plane waves, and pseudopotentials (both
norm-conserving and ultrasoft). 

Note: You might get the warning "ieee_inexact FORTRAN STOP" with QE GPU.  
Try setting NO_STOP_MESSAGE=1 in your batch script to avoid the warning.
Please find more on legacy PGI mpilers at https://forums.developer.nvidia.com
"""

toolchain = {'name': 'CrayNvidia', 'version': '21.09'}
toolchainopts = {'openmp': True, 'usempi': True, 'verbose': False}

sources = ['https://github.com/QEF/q-e/archive/qe-%(version_major)s.%(version_minor)s.tar.gz']

builddependencies = [
    ('cudatoolkit', EXTERNAL_MODULE)
]

dependencies = [
    ('cray-hdf5', EXTERNAL_MODULE),
    ('intel', EXTERNAL_MODULE),
    ('libxc', '5.1.7'),
    ('PLUMED', '%s' %local_plumedversion)
]

# Scalapack disabled: the GPU eigensolver can outperform the parallel CPU one 
configopts = ' CC=cc FC=ftn MPIF90=ftn CFLAGS=\'-O3 $(DFLAGS) $(IFLAGS) $(CUDA_CFLAGS)\' F90FLAGS=\'-fast -Mcache_align -Mpreprocess -Mlarge_arrays -mp $(FDFLAGS) $(CUDA_F90FLAGS) $(IFLAGS) $(MODFLAGS)\' FFLAGS="-fast -mp" LDFLAGS="-mp -cuda -gpu=cc60,cuda%(cudashortver)s -acc" FFT_LIBS="-L$MKLROOT/lib/intel64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core" --with-hdf5=yes --with-hdf5-libs="-lhdf5_hl -lhdf5 -lhdf5hl_fortran_nvidia -lhdf5_hl_nvidia -lhdf5_nvidia -lhdf5hl_fortran -lhdf5_fortran" --with-hdf5-include=$EBROOTHDF5/include --with-libxc=yes --with-libxc-prefix=$EBROOTLIBXC --with-libxc-include=$EBROOTLIBXC/include --with-cuda=$CUDA_HOME --with-cuda-cc=60 --with-cuda-runtime=%(cudashortver)s --enable-openmp --enable-parallel --with-scalapack=no '

# the experimental CUDA-Aware MPI (-D__GPU_MPI) does not work! 
# use MKL FFT instead of FFTW
prebuildopts = " sed -i -e '/^DFLAGS/ s/$/ -D__DFTI/' -e '/^IFLAGS/ s#$# -I${MKLROOT}/include -I$(MKLROOT)/include/fftw#' make.inc && "
prebuildopts += " cat make.inc && "
prebuildopts += ' plumed-patch -p -f --runtime --shared <<< 10 && '
buildopts = "pw"

# single make process required, since parallel builds fail
maxparallel = 1

sanity_check_paths = {
    'files': ['bin/pw.x'],
    'dirs': ['']
}

moduleclass = 'chem'
