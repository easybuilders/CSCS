# contributed by Jean Favre
#
easyblock = 'CMakeMake'

name = 'Visit'
version = '3.2.2'

homepage = 'https://visit-dav.github.io/visit-website/'
description = """VisIt is an Open Source, interactive, scalable, visualization,
animation and analysis tool."""

toolchain = {'name': 'CrayGNU', 'version': '21.09'}
toolchainopts = {'usempi': True, 'verbose': False}

#
# Visit downloads all its dependencies by itself during the configuration.
# The downloads may fail due to different reasons. So, we have pre-packaged
# visit with the downloaded dependencies.
#
# Below you will find the steps to create the SOURCELOWER_TAR_GZ file used in
# this recipe.
# we omit the download of conduit to replace with a private copy of version 0.8.2
#
# mkdir /run/user/1100/VisIt; cd /run/user/1100/VisIt
# wget  https://github.com/visit-dav/visit/releases/download/v3.2.2/visit3.2.2.tar.gz
# tar xf visit3.2.2.tar.gz visit3.2.2
# cd visit3.2.2
# ./src/tools/dev/scripts/build_visit --console --no-visit --parallel \
# --llvm --mesagl --vtk --makeflags -j32 --system-python --alt-python-dir /usr \
# --openssl --qwt --qt --silo --hdf5 --system-cmake --icet --ospray --ispc --embree --tbb \
# --xdmf --mfem --download-only
# substitute version 0.7.1 by 0.8.2
# sed -i 's/7.1/8.2/g' ./src/tools/dev/scripts/bv_support/bv_conduit.sh
# add "" for ${VTK_PY_LIBS}
# sed -i '1689s/"$/\\""/' ./src/tools/dev/scripts/bv_support/bv_vtk.sh
# sed -i '1689s/G=/G=\\"/' ./src/tools/dev/scripts/bv_support/bv_vtk.sh
# cp /apps/common/UES/easybuild/sources/c/Conduit/conduit-v0.8.2-src-with-blt.tar.gz .
# cd ..

# tar cfz  visit-3.2.2.tar.gz visit3.2.2
# mkdir -p /apps/common/UES/easybuild/sources/v/Visit
# cp visit-3.2.2.tar.gz /apps/common/UES/easybuild/sources/v/Visit/
#
# NOTES:
# * The new visit package is named visit-3.2.2.tar.gz, not visit3.2.2.tar.gz
# as the original file.
# * The download-only option must not be included in the actual build.
# * The configuration options are the same as the ones below.
# * We are using the system-python because one cannot compile python with xalt
# enabled.
# * In the preconfigopts commands below, there is an additional <<< "yes".
# This is used to accept the Qt License. This is not needed when using
# --download-only
# * The original intent was to compile only the server-side components, disabling the
# use of the GUI client for loggin nodes. Yet, this also removes the cli, preventing
# us to run python-based batch-mode scripts. Thus, we build all components [default]


# In order to use the pre-downloaded version use the source below
sources = ['/apps/common/UES/easybuild/sources/%(nameletterlower)s/%(name)s/%(namelower)s-%(version)s.tar.gz']

builddependencies = [
    ('CMake', '3.22.1', '', True),
]

preconfigopts =  'export PAR_COMPILER=cc; '
preconfigopts += 'export PAR_INCLUDE="-I$MPICH_DIR/include"; '
preconfigopts += 'pushd ../visit3.2.2; mkdir -p third_party; '
preconfigopts += 'sed -i "s/{C_COMPILER/{PAR_COMPILER/g" src/tools/dev/scripts/bv_support/bv_icet.sh; '
preconfigopts += 'sed -i "s/DMPI_COMPILER/DMPI_C_COMPILER/g" src/tools/dev/scripts/bv_support/bv_icet.sh; '

preconfigopts += './src/tools/dev/scripts/build_visit --console --no-%(namelower)s --parallel --llvm --mesagl --vtk --makeflags -j32 --system-python --alt-python-dir /usr '
preconfigopts += '--openssl --qwt --qt --silo --hdf5 --system-cmake --icet --ospray --ispc --embree --tbb --xdmf --mfem --conduit <<< "yes" && '
preconfigopts += 'sed -i "s/gcc TYPE/cc TYPE/g" `hostname`.cmake; sed -i "s/g++/CC/g" `hostname`.cmake; cp `hostname`.cmake ./src/config-site; mkdir build; cd build; '

configopts =  "-DMPI_CXX_COMPILER=CC -DCMAKE_BUILD_TYPE=RelWithDebInfo "
configopts += "-DVISIT_ENABLE_MANUALS=FALSE -DVISIT_DATA_MANUAL_EXAMPLES:BOOL=ON -DVISIT_INSTALL_THIRD_PARTY:BOOL=ON -DVISIT_SLIVR:BOOL=OFF -DVISIT_ENABLE_XDB:BOOL=OFF "

prebuildopts = " pushd ../visit3.2.2/build; "

preinstallopts = " pushd ../visit3.2.2/build; "

parallel = 24

#skipsteps = ['install']

runtest = False

install_cmd = "make install && cp %(builddir)s/visit3.2.2/third_party/mesagl/17.3.9/linux-x86_64_gcc-9.3/lib/libswrAVX* %(installdir)s/current/linux-%(arch)s/lib"
srcdir = '../visit3.2.2/src'

sanity_check_paths = {
    'files': ['bin/visit'],
    'dirs': ['data', 'bin', '%(version)s'],
}

moduleclass = 'vis'
